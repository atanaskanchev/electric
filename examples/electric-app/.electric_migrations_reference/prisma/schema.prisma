generator electric {
  provider      = "node /home/alco/code/electric-sql/electric/generator/dist/bin.js"
  output        = "/home/alco/code/electric-sql/electric/examples/electric-app/src/generated/client"
  relationModel = "false"
}

generator client {
  provider = "prisma-client-js"
  output   = "/home/alco/code/electric-sql/electric/examples/electric-app/src/generated/client"
}

datasource db {
  provider = "postgresql"
  url = ""
}

model Weird_Name {
  id	String	@id
  item	String?	@db.Uuid /// @zod.string.uuid()
  foo_bar	DateTime?	@map("foo bar")  @db.Timestamptz(6)
  items	Items?	@relation(fields: [item], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("_weird_Name")
}

model Items {
  id	String	@id  @db.Uuid /// @zod.string.uuid()
  value	String
  i	Int?	@db.SmallInt /// @zod.number.int().gte(-32768).lte(32767)
  i8	BigInt?
  r	Float?	@db.Real /// @zod.custom.use(z.number().or(z.nan()))
  f	Float?	@db.Real /// @zod.custom.use(z.number().or(z.nan()))
  Vc	String?	@db.VarChar
  b_oo_lean	Boolean	@map("b-oo-lean")
  weird_Name	Weird_Name[]

  @@map("items")
}

model Public_trees {
  id	String	@id  @db.Uuid /// @zod.string.uuid()
  wood	woods
  Knock_on___wood__	Boolean	@map(" Knock on (-wood-)")

  @@map("public.trees")
}

enum woods {
  birch
  mahogany
  spruce
  pine
  oak
}
